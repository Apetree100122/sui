#!/bin/bash

# Script requires sui-operations repo be locally checked out in order to kick off the antithesis workflow. If SUI_OPS_REPO is not provided then it will default to the path below.
if [ -z "$SUI_OPS_REPO" ]; then
  SUI_OPS_REPO="${HOME}/dev/sui-operations"
fi

if [ ! -d "$SUI_OPS_REPO" ]; then
  echo "sui-operations repo directory $SUI_OPS_REPO does not exist. Please make sure you have correctly set the sui-operatios repo directory." >&2
  exit 1
fi

# read -e option from commandline to get EMAIL var
while getopts "e:" opt; do
  case ${opt} in
    e)
      EMAIL=$OPTARG
      ;;
    \? )
      echo "Usage: launch-antithesis-debugger -e email [-d description] [-a alt_commit] [-u] [-l log_level] [-U]"
      exit 1
      ;;
  esac
done

if [ -z "$EMAIL" ]; then
  echo "Email is required. Usage: launch-antithesis-debugger -e email [-d description] [-a alt_commit] [-u] [-l log_level] [-U]"
  exit 1
fi


# read moment from stdin
MOMENT=$(cat)

# MOMENT looks like
# Moment._exact(
#    Session.from({id: "ad0c6012e8540b08def5c33d192d7a75-27-6"}),
#    '651196626583185125',
#    129.9692332826089
# )
#
# use grep to extract the session id, hash, and vtime. can't use jq because its not valid json

# extract session id
SESSION_ID=$(echo $MOMENT | grep Session | grep -o '"[^"]*"' | sed s/\"//g)
HASH=$(echo $MOMENT | grep -Eo "'([^']+)'," | cut -d"'" -f2)
VTIME=$(echo $MOMENT | grep -Eo '[0-9]+\.[0-9]+' | head -n1)

echo "SESSION_ID: $SESSION_ID"
echo "HASH: $HASH"
echo "VTIME: $VTIME"

cd $SUI_OPS_REPO

cmd="gh workflow run .github/workflows/launch-antithesis-debugger.yaml -f session=$SESSION_ID -f input_hash=$HASH -f vtime=$VTIME -f email=$EMAIL"

echo Running: $cmd

$cmd

GH_USER=$(gh api user | jq -r .login)

# need a small delay to allow the run to be created before listing
sleep 5

RUN_ID=$(gh run list --user $GH_USER --workflow .github/workflows/launch-antithesis-debugger.yaml --limit 1 --json databaseId -q '.[0].databaseId')

echo "Run ID: $RUN_ID"

URL=$(gh run view "$RUN_ID" --json url -q '.url')
echo "URL: $URL"
